/* Shared Styles - Optimized */
:root {
  --main-font: "Orbitron", sans-serif;
  --main-bg: #f4f4f9;
  --main-text: #333;
          --bg: #f4f4f9;
        --purple: #4b3f72;
        --accent: #00c9a7;
        --text: #333;
}

/* 
    Styles applied to both the <html> and <body> elements.
    Useful for setting global layout, sizing, or font properties.
*/
html, body {
  height: 100%;
}

/* 
    Styles for the <body> element.
    This section typically defines the overall layout, background, font, and base styles
    that apply to the entire webpage.
*/
body {
  font-family: var(--main-font);
  background: linear-gradient(
    #f4f4f9 0%,
    #a1c4fd 50%,
    #c2e9fb 100%
  );
  background-repeat: no-repeat;
  color: var(--main-text);
  margin: 0;
  padding: 0;
}
/*Reusable game container to be used for all games*/
.game-container {
  max-width: 700px;
  margin: 3rem auto;
  padding: 2rem;
  background: #fff;
  border-radius: 16px;
  box-shadow: 0 4px 24px rgba(0,0,0,0.08);
  display: flex;
  flex-direction: column;
  align-items: center;
}


/* Generic Game Styles */
/* 
    Styles for the game information section.
    This selector targets the element displaying game-related details,
    such as score, level, or instructions.
*/
#game-info {
  display: flex;
}


#reset:hover {
  background: #00c9a7;
  color: #4b3f72;
}

/* Minigame specific styles*/

/* Tic Tac Toe */

/*Use these root variable to make a global style across the site*/
/* :root {
  --primary: #4b3f72;
  --accent: #00c9a7;
  --bg: #f4f4f9;
  --text: #333;
  --cell-size: 100px;
  --cell-radius: 8px;
} */


#game {
  display: grid;
  grid-template-columns: repeat(3, 100px);
  gap: 10px;
  justify-content: center;
  margin: 1rem auto 1.25rem auto;
}


/* Individual cells in TIC TAC TOE GRID -  */
.cell {
  width: 100px;
  height: 100px;
  background: #fff;
  border: 2px solid #4b3f72;
  border-radius: 8px;
  font-size: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background 0.15s ease, transform 0.12s ease;
}

/* Hover feedback FOR INDIVIDUAL CELLS IN TIC TAC TOE GRID - NOT NEEDED*/
.cell:hover {
  background: #eae6f2;
  transform: translateY(-2px);
}

/* Status text (DISPLAYS STATUS -PLAYER 1 or PLAYER 2 NOT NEEDED */
#status {
  text-align: center;
  font-size: 1.1rem;
  color: #4b3f72;
  margin: 0.5rem 0 1rem 0;
}


/* Whack-a-mole AKA wam */
.wam-grid {
  width: 612px;
  height: 612px;
  display: flex;
  flex-wrap: wrap;
  align-content: flex-start;
}

/*
 * This code defines a selection of functionality.
 * Please provide the actual code or context for more specific documentation.
 */
.wam-tile {
  background: lightgreen;
  width: 200px;
  height: 200px;
  border: 2px solid #222;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background 0.2s;
}


/*
 * This code defines a functionality based on the user's selection.
 * It performs operations or manipulations on the selected code segment.
 * The implementation may include processing, transformation, or analysis
 * of the selected code, depending on the context in which it is used.
 */
.wam-tile:hover {
  background: #b2ffb2;
}


/* 
    The .mole class styles the mole element in the Minigames-Me project.
    Typically used to represent a mole in a whack-a-mole game.
    Add visual properties, positioning, and animations as needed.
*/
.mole {
  background-image: url(/assets/images/mole.webp);
  background-size: 120px 120px;
  background-repeat: no-repeat;
  background-position: center;
}

/* 
 * Applies styles to the .mole element when hovered by the user.
 * Typically used to provide visual feedback or interactivity for game elements.
 */
.mole:hover {
  background-image: url(/assets/images/mole.webp);
  background-size: 120px 120px;
  background-repeat: no-repeat;
  background-position: center;
}

/* Media queries */
@media (max-width: 800px) {
  .game-container {
    max-width: 95vw;
    padding: 1rem;
    margin: 2rem auto;
  }
}



